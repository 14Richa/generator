default:
  app:
    name: {{ asyncapi.info().title() }}
    version: {{ asyncapi.info().version() }}

  broker:
{%- if asyncapi.server(params.server).protocol() === "amqp" %}
    amqp:
      exchange:
      username:
      password:
      host: {{ asyncapi.server(params.server).url() | host }}
      port:
      topics: {{ asyncapi | channelNamesWithPublish | toAmqpTopic | dump | safe }}
      queue: {{ asyncapi.info().title() | queueName(asyncapi.info().version()) }}
      queueOptions:
        exclusive: false
        durable: true
        autoDelete: true
{%- endif %}
{%- if asyncapi.server(params.server).protocol() === "mqtt" %}
    mqtt:
      url: mqtt://{{ asyncapi.server(params.server).url() | stripProtocol }}
      topics: {{ asyncapi | channelNamesWithPublish | toMqttTopic | dump | safe }}
      qos:
      protocol: mqtt
      retain:
      subscribe: true
{%- endif %}
{%- if asyncapi.server(params.server).protocol() === "kafka" %}
    kafka:
      kafkaHost: {{ asyncapi.server(params.server).url() | host }}
      topics: {{ asyncapi | channelNamesWithPublish | toKafkaTopic | dump | safe }}
      consumerGroup: 'replace-me'
      topicSeparator: '__'
{%- endif %}

development:

test:

staging:

production:

